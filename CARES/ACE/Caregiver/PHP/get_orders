<?php
header('Content-Type: application/json');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: GET, POST, OPTIONS');
header('Access-Control-Allow-Headers: Content-Type');

// Cấu hình database
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "sanpham";

try {
    // Kết nối database
    $conn = new PDO("mysql:host=$servername;dbname=$dbname;charset=utf8", $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    // Lấy tham số từ request
    $search = isset($_GET['search']) ? $_GET['search'] : '';
    $status = isset($_GET['status']) ? $_GET['status'] : '';
    $from_date = isset($_GET['from_date']) ? $_GET['from_date'] : '';
    $to_date = isset($_GET['to_date']) ? $_GET['to_date'] : '';
    $page = isset($_GET['page']) ? (int)$_GET['page'] : 1;
    $limit = isset($_GET['limit']) ? (int)$_GET['limit'] : 8;
    
    // Xây dựng câu truy vấn
    $sql = "SELECT 
                dh.id_don_hang as ma,
                dh.ngay_dat as ngay,
                dh.thoi_gian_bat_dau as gio,
                dh.ten_khach_hang as khach_ten,
                ncs.ten as nguoi_cham_soc,
                dh.tong_tien as gia,
                'Tiền mặt' as thanh_toan,
                CASE 
                    WHEN dh.trang_thai = 'Đã giao' THEN 'hoan_thanh'
                    WHEN dh.trang_thai = 'Chờ xác nhận' THEN 'dang_xu_ly'
                    ELSE 'da_huy'
                END as trang_thai
            FROM don_hang dh
            LEFT JOIN nguoi_cham_soc ncs ON dh.id_cham_soc = ncs.id
            WHERE 1=1";
    
    $params = [];
    
    // Thêm điều kiện tìm kiếm
    if (!empty($search)) {
        $sql .= " AND (dh.id_don_hang LIKE :search 
                      OR dh.ten_khach_hang LIKE :search 
                      OR ncs.ten LIKE :search)";
        $params[':search'] = "%$search%";
    }
    
    // Thêm điều kiện trạng thái
    if (!empty($status)) {
        if ($status === 'hoan_thanh') {
            $sql .= " AND dh.trang_thai = 'Đã giao'";
        } elseif ($status === 'dang_xu_ly') {
            $sql .= " AND dh.trang_thai = 'Chờ xác nhận'";
        } elseif ($status === 'da_huy') {
            $sql .= " AND dh.trang_thai NOT IN ('Đã giao', 'Chờ xác nhận')";
        }
    }
    
    // Thêm điều kiện ngày
    if (!empty($from_date)) {
        $sql .= " AND dh.ngay_dat >= :from_date";
        $params[':from_date'] = $from_date;
    }
    
    if (!empty($to_date)) {
        $sql .= " AND dh.ngay_dat <= :to_date";
        $params[':to_date'] = $to_date;
    }
    
    // Đếm tổng số bản ghi
    $count_sql = "SELECT COUNT(*) as total FROM ($sql) as count_query";
    $count_stmt = $conn->prepare($count_sql);
    $count_stmt->execute($params);
    $total_records = $count_stmt->fetch(PDO::FETCH_ASSOC)['total'];
    
    // Thêm phân trang
    $offset = ($page - 1) * $limit;
    $sql .= " ORDER BY dh.ngay_dat DESC, dh.id_don_hang DESC LIMIT :limit OFFSET :offset";
    
    // Thực thi truy vấn
    $stmt = $conn->prepare($sql);
    
    // Bind parameters
    foreach ($params as $key => $value) {
        $stmt->bindValue($key, $value);
    }
    $stmt->bindValue(':limit', $limit, PDO::PARAM_INT);
    $stmt->bindValue(':offset', $offset, PDO::PARAM_INT);
    
    $stmt->execute();
    $orders = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    // Tính tổng tiền
    $total_amount = 0;
    foreach ($orders as $order) {
        $total_amount += (float)$order['gia'];
    }
    
    // Trả về kết quả
    $response = [
        'success' => true,
        'data' => $orders,
        'pagination' => [
            'current_page' => $page,
            'total_pages' => ceil($total_records / $limit),
            'total_records' => $total_records,
            'limit' => $limit
        ],
        'summary' => [
            'total_orders' => $total_records,
            'total_amount' => $total_amount
        ]
    ];
    
    echo json_encode($response, JSON_UNESCAPED_UNICODE);
    
} catch(PDOException $e) {
    $response = [
        'success' => false,
        'error' => 'Database error: ' . $e->getMessage()
    ];
    echo json_encode($response, JSON_UNESCAPED_UNICODE);
}
?>
